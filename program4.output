Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start elem

    3 elem: statement
    4     | varDec

    5 statement: SEMI
    6          | name EQ exp SEMI
    7          | name EQ exp error
    8          | name LPAREN arglist RPAREN SEMI
    9          | PRINT LPAREN arglist RPAREN SEMI
   10          | condstatement
   11          | WHILE LPAREN exp RPAREN statement
   12          | RETURN optexp SEMI
   13          | block

   14 condstatement: IF LPAREN exp RPAREN statement
   15              | IF LPAREN exp RPAREN statement ELSE statement

   16 block: LBRACE RBRACE
   17      | LBRACE locvardecplus RBRACE
   18      | LBRACE stateplus RBRACE
   19      | LBRACE locvardecplus stateplus RBRACE

   20 stateplus: statement
   21          | stateplus statement

   22 locvardecplus: locvardec
   23              | locvardecplus locvardec

   24 locvardec: type IDEN SEMI

   25 optexp: %empty
   26       | exp

   27 exp: name
   28    | NUM
   29    | NLL
   30    | name LPAREN RPAREN
   31    | name LPAREN error
   32    | READ LPAREN RPAREN
   33    | READ LPAREN error
   34    | READ error RPAREN
   35    | newexp
   36    | exp relop exp
   37    | exp sumop exp
   38    | exp proop exp
   39    | unyop exp
   40    | LPAREN exp RPAREN
   41    | LPAREN exp error

   42 newexp: NEW IDEN LPAREN arglist RPAREN
   43       | NEW IDEN LPAREN arglist error
   44       | NEW simpleType expstar brackstar

   45 brackstar: %empty
   46          | brackstar DOUBBRACK

   47 expstar: %empty
   48        | expstar LBRACK exp RBRACK
   49        | expstar LBRACK exp error

   50 arglist: %empty
   51        | explist

   52 explist: exp
   53        | explist COMMA exp

   54 name: THIS
   55     | IDEN
   56     | name DOT IDEN
   57     | name LBRACK exp RBRACK
   58     | name LBRACK exp error

   59 varDec: type IDEN SEMI
   60       | type IDEN error

   61 type: simpleType
   62     | type DOUBBRACK

   63 simpleType: INT
   64           | IDEN

   65 relop: DEQ
   66      | NEQ
   67      | LEQ
   68      | GEQ
   69      | GT
   70      | LT

   71 sumop: PLUS
   72      | MINUS
   73      | OR

   74 proop: MULT
   75      | DIVD
   76      | MOD
   77      | AND

   78 unyop: PLUS
   79      | MINUS
   80      | BANG


Terminals, with rules where they appear

$end (0) 0
error (256) 7 31 33 34 41 43 49 58 60
DOT (258) 56
THIS (259) 54
LBRACK (260) 48 49 57 58
RBRACK (261) 48 57
DOUBBRACK (262) 46 62
LBRACE (263) 16 17 18 19
RBRACE (264) 16 17 18 19
INT (265) 63
IDEN (266) 24 42 43 55 56 59 60 64
NUM (267) 28
NLL (268) 29
READ (269) 32 33 34
NEW (270) 42 43 44
LPAREN (271) 8 9 11 14 15 30 31 32 33 40 41 42 43
RPAREN (272) 8 9 11 14 15 30 32 34 40 42
IF (273) 14 15
ELSE (274) 15
DEQ (275) 65
NEQ (276) 66
LEQ (277) 67
GEQ (278) 68
GT (279) 69
LT (280) 70
PLUS (281) 71 78
MINUS (282) 72 79
OR (283) 73
MULT (284) 74
DIVD (285) 75
MOD (286) 76
AND (287) 77
BANG (288) 80
SEMI (289) 5 6 8 9 12 24 59
EQ (290) 6 7
COMMA (291) 53
RETURN (292) 12
WHILE (293) 11
PRINT (294) 9
RO (295)
SO (296)
PO (297)
UO (298)
DE (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
start (46)
    on left: 1 2, on right: 0 2
elem (47)
    on left: 3 4, on right: 2
statement (48)
    on left: 5 6 7 8 9 10 11 12 13, on right: 3 11 14 15 20 21
condstatement (49)
    on left: 14 15, on right: 10
block (50)
    on left: 16 17 18 19, on right: 13
stateplus (51)
    on left: 20 21, on right: 18 19 21
locvardecplus (52)
    on left: 22 23, on right: 17 19 23
locvardec (53)
    on left: 24, on right: 22 23
optexp (54)
    on left: 25 26, on right: 12
exp (55)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right:
    6 7 11 14 15 26 36 37 38 39 40 41 48 49 52 53 57 58
newexp (56)
    on left: 42 43 44, on right: 35
brackstar (57)
    on left: 45 46, on right: 44 46
expstar (58)
    on left: 47 48 49, on right: 44 48 49
arglist (59)
    on left: 50 51, on right: 8 9 42 43
explist (60)
    on left: 52 53, on right: 51 53
name (61)
    on left: 54 55 56 57 58, on right: 6 7 8 27 30 31 56 57 58
varDec (62)
    on left: 59 60, on right: 4
type (63)
    on left: 61 62, on right: 24 59 60 62
simpleType (64)
    on left: 63 64, on right: 44 61
relop (65)
    on left: 65 66 67 68 69 70, on right: 36
sumop (66)
    on left: 71 72 73, on right: 37
proop (67)
    on left: 74 75 76 77, on right: 38
unyop (68)
    on left: 78 79 80, on right: 39


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . elem

    $end    shift, and go to state 2
    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    INT     shift, and go to state 5
    IDEN    shift, and go to state 6
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    elem           go to state 12
    statement      go to state 13
    condstatement  go to state 14
    block          go to state 15
    name           go to state 16
    varDec         go to state 17
    type           go to state 18
    simpleType     go to state 19


State 2

    0 $accept: start $end .

    $default  accept


State 3

   54 name: THIS .

    $default  reduce using rule 54 (name)


State 4

   16 block: LBRACE . RBRACE
   17      | LBRACE . locvardecplus RBRACE
   18      | LBRACE . stateplus RBRACE
   19      | LBRACE . locvardecplus stateplus RBRACE

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    RBRACE  shift, and go to state 20
    INT     shift, and go to state 5
    IDEN    shift, and go to state 6
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 21
    condstatement  go to state 14
    block          go to state 15
    stateplus      go to state 22
    locvardecplus  go to state 23
    locvardec      go to state 24
    name           go to state 16
    type           go to state 25
    simpleType     go to state 19


State 5

   63 simpleType: INT .

    $default  reduce using rule 63 (simpleType)


State 6

   55 name: IDEN .
   64 simpleType: IDEN .

    DOUBBRACK  reduce using rule 64 (simpleType)
    IDEN       reduce using rule 64 (simpleType)
    $default   reduce using rule 55 (name)


State 7

   14 condstatement: IF . LPAREN exp RPAREN statement
   15              | IF . LPAREN exp RPAREN statement ELSE statement

    LPAREN  shift, and go to state 26


State 8

    5 statement: SEMI .

    $default  reduce using rule 5 (statement)


State 9

   12 statement: RETURN . optexp SEMI

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    $default  reduce using rule 25 (optexp)

    optexp  go to state 36
    exp     go to state 37
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 10

   11 statement: WHILE . LPAREN exp RPAREN statement

    LPAREN  shift, and go to state 41


State 11

    9 statement: PRINT . LPAREN arglist RPAREN SEMI

    LPAREN  shift, and go to state 42


State 12

    2 start: start elem .

    $default  reduce using rule 2 (start)


State 13

    3 elem: statement .

    $default  reduce using rule 3 (elem)


State 14

   10 statement: condstatement .

    $default  reduce using rule 10 (statement)


State 15

   13 statement: block .

    $default  reduce using rule 13 (statement)


State 16

    6 statement: name . EQ exp SEMI
    7          | name . EQ exp error
    8          | name . LPAREN arglist RPAREN SEMI
   56 name: name . DOT IDEN
   57     | name . LBRACK exp RBRACK
   58     | name . LBRACK exp error

    DOT     shift, and go to state 43
    LBRACK  shift, and go to state 44
    LPAREN  shift, and go to state 45
    EQ      shift, and go to state 46


State 17

    4 elem: varDec .

    $default  reduce using rule 4 (elem)


State 18

   59 varDec: type . IDEN SEMI
   60       | type . IDEN error
   62 type: type . DOUBBRACK

    DOUBBRACK  shift, and go to state 47
    IDEN       shift, and go to state 48


State 19

   61 type: simpleType .

    $default  reduce using rule 61 (type)


State 20

   16 block: LBRACE RBRACE .

    $default  reduce using rule 16 (block)


State 21

   20 stateplus: statement .

    $default  reduce using rule 20 (stateplus)


State 22

   18 block: LBRACE stateplus . RBRACE
   21 stateplus: stateplus . statement

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    RBRACE  shift, and go to state 49
    IDEN    shift, and go to state 27
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 50
    condstatement  go to state 14
    block          go to state 15
    name           go to state 16


State 23

   17 block: LBRACE locvardecplus . RBRACE
   19      | LBRACE locvardecplus . stateplus RBRACE
   23 locvardecplus: locvardecplus . locvardec

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    RBRACE  shift, and go to state 51
    INT     shift, and go to state 5
    IDEN    shift, and go to state 6
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 21
    condstatement  go to state 14
    block          go to state 15
    stateplus      go to state 52
    locvardec      go to state 53
    name           go to state 16
    type           go to state 25
    simpleType     go to state 19


State 24

   22 locvardecplus: locvardec .

    $default  reduce using rule 22 (locvardecplus)


State 25

   24 locvardec: type . IDEN SEMI
   62 type: type . DOUBBRACK

    DOUBBRACK  shift, and go to state 47
    IDEN       shift, and go to state 54


State 26

   14 condstatement: IF LPAREN . exp RPAREN statement
   15              | IF LPAREN . exp RPAREN statement ELSE statement

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 55
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 27

   55 name: IDEN .

    $default  reduce using rule 55 (name)


State 28

   28 exp: NUM .

    $default  reduce using rule 28 (exp)


State 29

   29 exp: NLL .

    $default  reduce using rule 29 (exp)


State 30

   32 exp: READ . LPAREN RPAREN
   33    | READ . LPAREN error
   34    | READ . error RPAREN

    error   shift, and go to state 56
    LPAREN  shift, and go to state 57


State 31

   42 newexp: NEW . IDEN LPAREN arglist RPAREN
   43       | NEW . IDEN LPAREN arglist error
   44       | NEW . simpleType expstar brackstar

    INT   shift, and go to state 5
    IDEN  shift, and go to state 58

    simpleType  go to state 59


State 32

   40 exp: LPAREN . exp RPAREN
   41    | LPAREN . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 60
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 33

   78 unyop: PLUS .

    $default  reduce using rule 78 (unyop)


State 34

   79 unyop: MINUS .

    $default  reduce using rule 79 (unyop)


State 35

   80 unyop: BANG .

    $default  reduce using rule 80 (unyop)


State 36

   12 statement: RETURN optexp . SEMI

    SEMI  shift, and go to state 61


State 37

   26 optexp: exp .
   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp

    DEQ    shift, and go to state 62
    NEQ    shift, and go to state 63
    LEQ    shift, and go to state 64
    GEQ    shift, and go to state 65
    GT     shift, and go to state 66
    LT     shift, and go to state 67
    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    OR     shift, and go to state 70
    MULT   shift, and go to state 71
    DIVD   shift, and go to state 72
    MOD    shift, and go to state 73
    AND    shift, and go to state 74

    $default  reduce using rule 26 (optexp)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 38

   35 exp: newexp .

    $default  reduce using rule 35 (exp)


State 39

   27 exp: name .
   30    | name . LPAREN RPAREN
   31    | name . LPAREN error
   56 name: name . DOT IDEN
   57     | name . LBRACK exp RBRACK
   58     | name . LBRACK exp error

    DOT     shift, and go to state 43
    LBRACK  shift, and go to state 44
    LPAREN  shift, and go to state 78

    $default  reduce using rule 27 (exp)


State 40

   39 exp: unyop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 79
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 41

   11 statement: WHILE LPAREN . exp RPAREN statement

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 80
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 42

    9 statement: PRINT LPAREN . arglist RPAREN SEMI

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    $default  reduce using rule 50 (arglist)

    exp      go to state 81
    newexp   go to state 38
    arglist  go to state 82
    explist  go to state 83
    name     go to state 39
    unyop    go to state 40


State 43

   56 name: name DOT . IDEN

    IDEN  shift, and go to state 84


State 44

   57 name: name LBRACK . exp RBRACK
   58     | name LBRACK . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 85
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 45

    8 statement: name LPAREN . arglist RPAREN SEMI

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    $default  reduce using rule 50 (arglist)

    exp      go to state 81
    newexp   go to state 38
    arglist  go to state 86
    explist  go to state 83
    name     go to state 39
    unyop    go to state 40


State 46

    6 statement: name EQ . exp SEMI
    7          | name EQ . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 87
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 47

   62 type: type DOUBBRACK .

    $default  reduce using rule 62 (type)


State 48

   59 varDec: type IDEN . SEMI
   60       | type IDEN . error

    error  shift, and go to state 88
    SEMI   shift, and go to state 89


State 49

   18 block: LBRACE stateplus RBRACE .

    $default  reduce using rule 18 (block)


State 50

   21 stateplus: stateplus statement .

    $default  reduce using rule 21 (stateplus)


State 51

   17 block: LBRACE locvardecplus RBRACE .

    $default  reduce using rule 17 (block)


State 52

   19 block: LBRACE locvardecplus stateplus . RBRACE
   21 stateplus: stateplus . statement

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    RBRACE  shift, and go to state 90
    IDEN    shift, and go to state 27
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 50
    condstatement  go to state 14
    block          go to state 15
    name           go to state 16


State 53

   23 locvardecplus: locvardecplus locvardec .

    $default  reduce using rule 23 (locvardecplus)


State 54

   24 locvardec: type IDEN . SEMI

    SEMI  shift, and go to state 91


State 55

   14 condstatement: IF LPAREN exp . RPAREN statement
   15              | IF LPAREN exp . RPAREN statement ELSE statement
   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp

    RPAREN  shift, and go to state 92
    DEQ     shift, and go to state 62
    NEQ     shift, and go to state 63
    LEQ     shift, and go to state 64
    GEQ     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    OR      shift, and go to state 70
    MULT    shift, and go to state 71
    DIVD    shift, and go to state 72
    MOD     shift, and go to state 73
    AND     shift, and go to state 74

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 56

   34 exp: READ error . RPAREN

    RPAREN  shift, and go to state 93


State 57

   32 exp: READ LPAREN . RPAREN
   33    | READ LPAREN . error

    error   shift, and go to state 94
    RPAREN  shift, and go to state 95


State 58

   42 newexp: NEW IDEN . LPAREN arglist RPAREN
   43       | NEW IDEN . LPAREN arglist error
   64 simpleType: IDEN .

    LPAREN  shift, and go to state 96

    $default  reduce using rule 64 (simpleType)


State 59

   44 newexp: NEW simpleType . expstar brackstar

    $default  reduce using rule 47 (expstar)

    expstar  go to state 97


State 60

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   40    | LPAREN exp . RPAREN
   41    | LPAREN exp . error

    error   shift, and go to state 98
    RPAREN  shift, and go to state 99
    DEQ     shift, and go to state 62
    NEQ     shift, and go to state 63
    LEQ     shift, and go to state 64
    GEQ     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    OR      shift, and go to state 70
    MULT    shift, and go to state 71
    DIVD    shift, and go to state 72
    MOD     shift, and go to state 73
    AND     shift, and go to state 74

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 61

   12 statement: RETURN optexp SEMI .

    $default  reduce using rule 12 (statement)


State 62

   65 relop: DEQ .

    $default  reduce using rule 65 (relop)


State 63

   66 relop: NEQ .

    $default  reduce using rule 66 (relop)


State 64

   67 relop: LEQ .

    $default  reduce using rule 67 (relop)


State 65

   68 relop: GEQ .

    $default  reduce using rule 68 (relop)


State 66

   69 relop: GT .

    $default  reduce using rule 69 (relop)


State 67

   70 relop: LT .

    $default  reduce using rule 70 (relop)


State 68

   71 sumop: PLUS .

    $default  reduce using rule 71 (sumop)


State 69

   72 sumop: MINUS .

    $default  reduce using rule 72 (sumop)


State 70

   73 sumop: OR .

    $default  reduce using rule 73 (sumop)


State 71

   74 proop: MULT .

    $default  reduce using rule 74 (proop)


State 72

   75 proop: DIVD .

    $default  reduce using rule 75 (proop)


State 73

   76 proop: MOD .

    $default  reduce using rule 76 (proop)


State 74

   77 proop: AND .

    $default  reduce using rule 77 (proop)


State 75

   36 exp: exp relop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 100
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 76

   37 exp: exp sumop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 101
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 77

   38 exp: exp proop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 102
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 78

   30 exp: name LPAREN . RPAREN
   31    | name LPAREN . error

    error   shift, and go to state 103
    RPAREN  shift, and go to state 104


State 79

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   39    | unyop exp .

    $default  reduce using rule 39 (exp)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 80

   11 statement: WHILE LPAREN exp . RPAREN statement
   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp

    RPAREN  shift, and go to state 105
    DEQ     shift, and go to state 62
    NEQ     shift, and go to state 63
    LEQ     shift, and go to state 64
    GEQ     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    OR      shift, and go to state 70
    MULT    shift, and go to state 71
    DIVD    shift, and go to state 72
    MOD     shift, and go to state 73
    AND     shift, and go to state 74

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 81

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   52 explist: exp .

    DEQ    shift, and go to state 62
    NEQ    shift, and go to state 63
    LEQ    shift, and go to state 64
    GEQ    shift, and go to state 65
    GT     shift, and go to state 66
    LT     shift, and go to state 67
    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    OR     shift, and go to state 70
    MULT   shift, and go to state 71
    DIVD   shift, and go to state 72
    MOD    shift, and go to state 73
    AND    shift, and go to state 74

    $default  reduce using rule 52 (explist)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 82

    9 statement: PRINT LPAREN arglist . RPAREN SEMI

    RPAREN  shift, and go to state 106


State 83

   51 arglist: explist .
   53 explist: explist . COMMA exp

    COMMA  shift, and go to state 107

    $default  reduce using rule 51 (arglist)


State 84

   56 name: name DOT IDEN .

    $default  reduce using rule 56 (name)


State 85

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   57 name: name LBRACK exp . RBRACK
   58     | name LBRACK exp . error

    error   shift, and go to state 108
    RBRACK  shift, and go to state 109
    DEQ     shift, and go to state 62
    NEQ     shift, and go to state 63
    LEQ     shift, and go to state 64
    GEQ     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    OR      shift, and go to state 70
    MULT    shift, and go to state 71
    DIVD    shift, and go to state 72
    MOD     shift, and go to state 73
    AND     shift, and go to state 74

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 86

    8 statement: name LPAREN arglist . RPAREN SEMI

    RPAREN  shift, and go to state 110


State 87

    6 statement: name EQ exp . SEMI
    7          | name EQ exp . error
   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp

    error  shift, and go to state 111
    DEQ    shift, and go to state 62
    NEQ    shift, and go to state 63
    LEQ    shift, and go to state 64
    GEQ    shift, and go to state 65
    GT     shift, and go to state 66
    LT     shift, and go to state 67
    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    OR     shift, and go to state 70
    MULT   shift, and go to state 71
    DIVD   shift, and go to state 72
    MOD    shift, and go to state 73
    AND    shift, and go to state 74
    SEMI   shift, and go to state 112

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 88

   60 varDec: type IDEN error .

    $default  reduce using rule 60 (varDec)


State 89

   59 varDec: type IDEN SEMI .

    $default  reduce using rule 59 (varDec)


State 90

   19 block: LBRACE locvardecplus stateplus RBRACE .

    $default  reduce using rule 19 (block)


State 91

   24 locvardec: type IDEN SEMI .

    $default  reduce using rule 24 (locvardec)


State 92

   14 condstatement: IF LPAREN exp RPAREN . statement
   15              | IF LPAREN exp RPAREN . statement ELSE statement

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    IDEN    shift, and go to state 27
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 113
    condstatement  go to state 14
    block          go to state 15
    name           go to state 16


State 93

   34 exp: READ error RPAREN .

    $default  reduce using rule 34 (exp)


State 94

   33 exp: READ LPAREN error .

    $default  reduce using rule 33 (exp)


State 95

   32 exp: READ LPAREN RPAREN .

    $default  reduce using rule 32 (exp)


State 96

   42 newexp: NEW IDEN LPAREN . arglist RPAREN
   43       | NEW IDEN LPAREN . arglist error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    $default  reduce using rule 50 (arglist)

    exp      go to state 81
    newexp   go to state 38
    arglist  go to state 114
    explist  go to state 83
    name     go to state 39
    unyop    go to state 40


State 97

   44 newexp: NEW simpleType expstar . brackstar
   48 expstar: expstar . LBRACK exp RBRACK
   49        | expstar . LBRACK exp error

    LBRACK  shift, and go to state 115

    $default  reduce using rule 45 (brackstar)

    brackstar  go to state 116


State 98

   41 exp: LPAREN exp error .

    $default  reduce using rule 41 (exp)


State 99

   40 exp: LPAREN exp RPAREN .

    $default  reduce using rule 40 (exp)


State 100

   36 exp: exp . relop exp
   36    | exp relop exp .
   37    | exp . sumop exp
   38    | exp . proop exp

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    OR     shift, and go to state 70
    MULT   shift, and go to state 71
    DIVD   shift, and go to state 72
    MOD    shift, and go to state 73
    AND    shift, and go to state 74

    $default  reduce using rule 36 (exp)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 101

   36 exp: exp . relop exp
   37    | exp . sumop exp
   37    | exp sumop exp .
   38    | exp . proop exp

    MULT  shift, and go to state 71
    DIVD  shift, and go to state 72
    MOD   shift, and go to state 73
    AND   shift, and go to state 74

    $default  reduce using rule 37 (exp)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 102

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   38    | exp proop exp .

    $default  reduce using rule 38 (exp)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 103

   31 exp: name LPAREN error .

    $default  reduce using rule 31 (exp)


State 104

   30 exp: name LPAREN RPAREN .

    $default  reduce using rule 30 (exp)


State 105

   11 statement: WHILE LPAREN exp RPAREN . statement

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    IDEN    shift, and go to state 27
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 117
    condstatement  go to state 14
    block          go to state 15
    name           go to state 16


State 106

    9 statement: PRINT LPAREN arglist RPAREN . SEMI

    SEMI  shift, and go to state 118


State 107

   53 explist: explist COMMA . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 119
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 108

   58 name: name LBRACK exp error .

    $default  reduce using rule 58 (name)


State 109

   57 name: name LBRACK exp RBRACK .

    $default  reduce using rule 57 (name)


State 110

    8 statement: name LPAREN arglist RPAREN . SEMI

    SEMI  shift, and go to state 120


State 111

    7 statement: name EQ exp error .

    $default  reduce using rule 7 (statement)


State 112

    6 statement: name EQ exp SEMI .

    $default  reduce using rule 6 (statement)


State 113

   14 condstatement: IF LPAREN exp RPAREN statement .
   15              | IF LPAREN exp RPAREN statement . ELSE statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 14 (condstatement)


State 114

   42 newexp: NEW IDEN LPAREN arglist . RPAREN
   43       | NEW IDEN LPAREN arglist . error

    error   shift, and go to state 122
    RPAREN  shift, and go to state 123


State 115

   48 expstar: expstar LBRACK . exp RBRACK
   49        | expstar LBRACK . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 27
    NUM     shift, and go to state 28
    NLL     shift, and go to state 29
    READ    shift, and go to state 30
    NEW     shift, and go to state 31
    LPAREN  shift, and go to state 32
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    BANG    shift, and go to state 35

    exp     go to state 124
    newexp  go to state 38
    name    go to state 39
    unyop   go to state 40


State 116

   44 newexp: NEW simpleType expstar brackstar .
   46 brackstar: brackstar . DOUBBRACK

    DOUBBRACK  shift, and go to state 125

    $default  reduce using rule 44 (newexp)


State 117

   11 statement: WHILE LPAREN exp RPAREN statement .

    $default  reduce using rule 11 (statement)


State 118

    9 statement: PRINT LPAREN arglist RPAREN SEMI .

    $default  reduce using rule 9 (statement)


State 119

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   53 explist: explist COMMA exp .

    DEQ    shift, and go to state 62
    NEQ    shift, and go to state 63
    LEQ    shift, and go to state 64
    GEQ    shift, and go to state 65
    GT     shift, and go to state 66
    LT     shift, and go to state 67
    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    OR     shift, and go to state 70
    MULT   shift, and go to state 71
    DIVD   shift, and go to state 72
    MOD    shift, and go to state 73
    AND    shift, and go to state 74

    $default  reduce using rule 53 (explist)

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 120

    8 statement: name LPAREN arglist RPAREN SEMI .

    $default  reduce using rule 8 (statement)


State 121

   15 condstatement: IF LPAREN exp RPAREN statement ELSE . statement

    THIS    shift, and go to state 3
    LBRACE  shift, and go to state 4
    IDEN    shift, and go to state 27
    IF      shift, and go to state 7
    SEMI    shift, and go to state 8
    RETURN  shift, and go to state 9
    WHILE   shift, and go to state 10
    PRINT   shift, and go to state 11

    statement      go to state 126
    condstatement  go to state 14
    block          go to state 15
    name           go to state 16


State 122

   43 newexp: NEW IDEN LPAREN arglist error .

    $default  reduce using rule 43 (newexp)


State 123

   42 newexp: NEW IDEN LPAREN arglist RPAREN .

    $default  reduce using rule 42 (newexp)


State 124

   36 exp: exp . relop exp
   37    | exp . sumop exp
   38    | exp . proop exp
   48 expstar: expstar LBRACK exp . RBRACK
   49        | expstar LBRACK exp . error

    error   shift, and go to state 127
    RBRACK  shift, and go to state 128
    DEQ     shift, and go to state 62
    NEQ     shift, and go to state 63
    LEQ     shift, and go to state 64
    GEQ     shift, and go to state 65
    GT      shift, and go to state 66
    LT      shift, and go to state 67
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    OR      shift, and go to state 70
    MULT    shift, and go to state 71
    DIVD    shift, and go to state 72
    MOD     shift, and go to state 73
    AND     shift, and go to state 74

    relop  go to state 75
    sumop  go to state 76
    proop  go to state 77


State 125

   46 brackstar: brackstar DOUBBRACK .

    $default  reduce using rule 46 (brackstar)


State 126

   15 condstatement: IF LPAREN exp RPAREN statement ELSE statement .

    $default  reduce using rule 15 (condstatement)


State 127

   49 expstar: expstar LBRACK exp error .

    $default  reduce using rule 49 (expstar)


State 128

   48 expstar: expstar LBRACK exp RBRACK .

    $default  reduce using rule 48 (expstar)
