Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start elem

    3 elem: statement
    4     | varDec

    5 statement: name EQ exp SEMI
    6          | name EQ exp error

    7 varDec: type IDEN SEMI
    8       | type IDEN error

    9 type: simpleType
   10     | type DOUBBRACK

   11 simpleType: INT
   12           | IDEN

   13 exp: name
   14    | NUM
   15    | NLL
   16    | name LPAREN RPAREN
   17    | name LPAREN error
   18    | READ LPAREN RPAREN
   19    | READ LPAREN error
   20    | READ error RPAREN
   21    | newexp
   22    | exp relop exp
   23    | exp sumop exp
   24    | exp proop exp
   25    | unyop exp
   26    | LPAREN exp RPAREN
   27    | LPAREN exp error

   28 newexp: NEW simpleType LPAREN RPAREN
   29       | NEW simpleType LPAREN error
   30       | NEW simpleType expstar brackstar

   31 expstar: %empty
   32        | expstar LBRACK exp RBRACK
   33        | expstar LBRACK exp error

   34 brackstar: %empty
   35          | brackstar DOUBBRACK

   36 name: THIS
   37     | IDEN
   38     | name DOT IDEN
   39     | name LBRACK exp RBRACK
   40     | name LBRACK exp error

   41 relop: DEQ
   42      | NEQ
   43      | LEQ
   44      | GEQ
   45      | GT
   46      | LT

   47 sumop: PLUS
   48      | MINUS
   49      | OR

   50 proop: MULT
   51      | DIVD
   52      | MOD
   53      | AND

   54 unyop: PLUS
   55      | MINUS
   56      | BANG


Terminals, with rules where they appear

$end (0) 0
error (256) 6 8 17 19 20 27 29 33 40
DOT (258) 38
THIS (259) 36
LBRACK (260) 32 33 39 40
RBRACK (261) 32 39
DOUBBRACK (262) 10 35
INT (263) 11
IDEN (264) 7 8 12 37 38
NUM (265) 14
NLL (266) 15
READ (267) 18 19 20
NEW (268) 28 29 30
LPAREN (269) 16 17 18 19 26 27 28 29
RPAREN (270) 16 18 20 26 28
DEQ (271) 41
NEQ (272) 42
LEQ (273) 43
GEQ (274) 44
GT (275) 45
LT (276) 46
PLUS (277) 47 54
MINUS (278) 48 55
OR (279) 49
MULT (280) 50
DIVD (281) 51
MOD (282) 52
AND (283) 53
BANG (284) 56
SEMI (285) 5 7
EQ (286) 5 6
RO (287)
SO (288)
PO (289)
UO (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
start (37)
    on left: 1 2, on right: 0 2
elem (38)
    on left: 3 4, on right: 2
statement (39)
    on left: 5 6, on right: 3
varDec (40)
    on left: 7 8, on right: 4
type (41)
    on left: 9 10, on right: 7 8 10
simpleType (42)
    on left: 11 12, on right: 9 28 29 30
exp (43)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    5 6 22 23 24 25 26 27 32 33 39 40
newexp (44)
    on left: 28 29 30, on right: 21
expstar (45)
    on left: 31 32 33, on right: 30 32 33
brackstar (46)
    on left: 34 35, on right: 30 35
name (47)
    on left: 36 37 38 39 40, on right: 5 6 13 16 17 38 39 40
relop (48)
    on left: 41 42 43 44 45 46, on right: 22
sumop (49)
    on left: 47 48 49, on right: 23
proop (50)
    on left: 50 51 52 53, on right: 24
unyop (51)
    on left: 54 55 56, on right: 25


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . elem

    $end  shift, and go to state 2
    THIS  shift, and go to state 3
    INT   shift, and go to state 4
    IDEN  shift, and go to state 5

    elem        go to state 6
    statement   go to state 7
    varDec      go to state 8
    type        go to state 9
    simpleType  go to state 10
    name        go to state 11


State 2

    0 $accept: start $end .

    $default  accept


State 3

   36 name: THIS .

    $default  reduce using rule 36 (name)


State 4

   11 simpleType: INT .

    $default  reduce using rule 11 (simpleType)


State 5

   12 simpleType: IDEN .
   37 name: IDEN .

    DOUBBRACK  reduce using rule 12 (simpleType)
    IDEN       reduce using rule 12 (simpleType)
    $default   reduce using rule 37 (name)


State 6

    2 start: start elem .

    $default  reduce using rule 2 (start)


State 7

    3 elem: statement .

    $default  reduce using rule 3 (elem)


State 8

    4 elem: varDec .

    $default  reduce using rule 4 (elem)


State 9

    7 varDec: type . IDEN SEMI
    8       | type . IDEN error
   10 type: type . DOUBBRACK

    DOUBBRACK  shift, and go to state 12
    IDEN       shift, and go to state 13


State 10

    9 type: simpleType .

    $default  reduce using rule 9 (type)


State 11

    5 statement: name . EQ exp SEMI
    6          | name . EQ exp error
   38 name: name . DOT IDEN
   39     | name . LBRACK exp RBRACK
   40     | name . LBRACK exp error

    DOT     shift, and go to state 14
    LBRACK  shift, and go to state 15
    EQ      shift, and go to state 16


State 12

   10 type: type DOUBBRACK .

    $default  reduce using rule 10 (type)


State 13

    7 varDec: type IDEN . SEMI
    8       | type IDEN . error

    error  shift, and go to state 17
    SEMI   shift, and go to state 18


State 14

   38 name: name DOT . IDEN

    IDEN  shift, and go to state 19


State 15

   39 name: name LBRACK . exp RBRACK
   40     | name LBRACK . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 29
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 16

    5 statement: name EQ . exp SEMI
    6          | name EQ . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 33
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 17

    8 varDec: type IDEN error .

    $default  reduce using rule 8 (varDec)


State 18

    7 varDec: type IDEN SEMI .

    $default  reduce using rule 7 (varDec)


State 19

   38 name: name DOT IDEN .

    $default  reduce using rule 38 (name)


State 20

   37 name: IDEN .

    $default  reduce using rule 37 (name)


State 21

   14 exp: NUM .

    $default  reduce using rule 14 (exp)


State 22

   15 exp: NLL .

    $default  reduce using rule 15 (exp)


State 23

   18 exp: READ . LPAREN RPAREN
   19    | READ . LPAREN error
   20    | READ . error RPAREN

    error   shift, and go to state 34
    LPAREN  shift, and go to state 35


State 24

   28 newexp: NEW . simpleType LPAREN RPAREN
   29       | NEW . simpleType LPAREN error
   30       | NEW . simpleType expstar brackstar

    INT   shift, and go to state 4
    IDEN  shift, and go to state 36

    simpleType  go to state 37


State 25

   26 exp: LPAREN . exp RPAREN
   27    | LPAREN . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 38
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 26

   54 unyop: PLUS .

    $default  reduce using rule 54 (unyop)


State 27

   55 unyop: MINUS .

    $default  reduce using rule 55 (unyop)


State 28

   56 unyop: BANG .

    $default  reduce using rule 56 (unyop)


State 29

   22 exp: exp . relop exp
   23    | exp . sumop exp
   24    | exp . proop exp
   39 name: name LBRACK exp . RBRACK
   40     | name LBRACK exp . error

    error   shift, and go to state 39
    RBRACK  shift, and go to state 40
    DEQ     shift, and go to state 41
    NEQ     shift, and go to state 42
    LEQ     shift, and go to state 43
    GEQ     shift, and go to state 44
    GT      shift, and go to state 45
    LT      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    OR      shift, and go to state 49
    MULT    shift, and go to state 50
    DIVD    shift, and go to state 51
    MOD     shift, and go to state 52
    AND     shift, and go to state 53

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 30

   21 exp: newexp .

    $default  reduce using rule 21 (exp)


State 31

   13 exp: name .
   16    | name . LPAREN RPAREN
   17    | name . LPAREN error
   38 name: name . DOT IDEN
   39     | name . LBRACK exp RBRACK
   40     | name . LBRACK exp error

    DOT     shift, and go to state 14
    LBRACK  shift, and go to state 15
    LPAREN  shift, and go to state 57

    $default  reduce using rule 13 (exp)


State 32

   25 exp: unyop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 58
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 33

    5 statement: name EQ exp . SEMI
    6          | name EQ exp . error
   22 exp: exp . relop exp
   23    | exp . sumop exp
   24    | exp . proop exp

    error  shift, and go to state 59
    DEQ    shift, and go to state 41
    NEQ    shift, and go to state 42
    LEQ    shift, and go to state 43
    GEQ    shift, and go to state 44
    GT     shift, and go to state 45
    LT     shift, and go to state 46
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    OR     shift, and go to state 49
    MULT   shift, and go to state 50
    DIVD   shift, and go to state 51
    MOD    shift, and go to state 52
    AND    shift, and go to state 53
    SEMI   shift, and go to state 60

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 34

   20 exp: READ error . RPAREN

    RPAREN  shift, and go to state 61


State 35

   18 exp: READ LPAREN . RPAREN
   19    | READ LPAREN . error

    error   shift, and go to state 62
    RPAREN  shift, and go to state 63


State 36

   12 simpleType: IDEN .

    $default  reduce using rule 12 (simpleType)


State 37

   28 newexp: NEW simpleType . LPAREN RPAREN
   29       | NEW simpleType . LPAREN error
   30       | NEW simpleType . expstar brackstar

    LPAREN  shift, and go to state 64

    $default  reduce using rule 31 (expstar)

    expstar  go to state 65


State 38

   22 exp: exp . relop exp
   23    | exp . sumop exp
   24    | exp . proop exp
   26    | LPAREN exp . RPAREN
   27    | LPAREN exp . error

    error   shift, and go to state 66
    RPAREN  shift, and go to state 67
    DEQ     shift, and go to state 41
    NEQ     shift, and go to state 42
    LEQ     shift, and go to state 43
    GEQ     shift, and go to state 44
    GT      shift, and go to state 45
    LT      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    OR      shift, and go to state 49
    MULT    shift, and go to state 50
    DIVD    shift, and go to state 51
    MOD     shift, and go to state 52
    AND     shift, and go to state 53

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 39

   40 name: name LBRACK exp error .

    $default  reduce using rule 40 (name)


State 40

   39 name: name LBRACK exp RBRACK .

    $default  reduce using rule 39 (name)


State 41

   41 relop: DEQ .

    $default  reduce using rule 41 (relop)


State 42

   42 relop: NEQ .

    $default  reduce using rule 42 (relop)


State 43

   43 relop: LEQ .

    $default  reduce using rule 43 (relop)


State 44

   44 relop: GEQ .

    $default  reduce using rule 44 (relop)


State 45

   45 relop: GT .

    $default  reduce using rule 45 (relop)


State 46

   46 relop: LT .

    $default  reduce using rule 46 (relop)


State 47

   47 sumop: PLUS .

    $default  reduce using rule 47 (sumop)


State 48

   48 sumop: MINUS .

    $default  reduce using rule 48 (sumop)


State 49

   49 sumop: OR .

    $default  reduce using rule 49 (sumop)


State 50

   50 proop: MULT .

    $default  reduce using rule 50 (proop)


State 51

   51 proop: DIVD .

    $default  reduce using rule 51 (proop)


State 52

   52 proop: MOD .

    $default  reduce using rule 52 (proop)


State 53

   53 proop: AND .

    $default  reduce using rule 53 (proop)


State 54

   22 exp: exp relop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 68
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 55

   23 exp: exp sumop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 69
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 56

   24 exp: exp proop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 70
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 57

   16 exp: name LPAREN . RPAREN
   17    | name LPAREN . error

    error   shift, and go to state 71
    RPAREN  shift, and go to state 72


State 58

   22 exp: exp . relop exp
   23    | exp . sumop exp
   24    | exp . proop exp
   25    | unyop exp .

    $default  reduce using rule 25 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 59

    6 statement: name EQ exp error .

    $default  reduce using rule 6 (statement)


State 60

    5 statement: name EQ exp SEMI .

    $default  reduce using rule 5 (statement)


State 61

   20 exp: READ error RPAREN .

    $default  reduce using rule 20 (exp)


State 62

   19 exp: READ LPAREN error .

    $default  reduce using rule 19 (exp)


State 63

   18 exp: READ LPAREN RPAREN .

    $default  reduce using rule 18 (exp)


State 64

   28 newexp: NEW simpleType LPAREN . RPAREN
   29       | NEW simpleType LPAREN . error

    error   shift, and go to state 73
    RPAREN  shift, and go to state 74


State 65

   30 newexp: NEW simpleType expstar . brackstar
   32 expstar: expstar . LBRACK exp RBRACK
   33        | expstar . LBRACK exp error

    LBRACK  shift, and go to state 75

    $default  reduce using rule 34 (brackstar)

    brackstar  go to state 76


State 66

   27 exp: LPAREN exp error .

    $default  reduce using rule 27 (exp)


State 67

   26 exp: LPAREN exp RPAREN .

    $default  reduce using rule 26 (exp)


State 68

   22 exp: exp . relop exp
   22    | exp relop exp .
   23    | exp . sumop exp
   24    | exp . proop exp

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    OR     shift, and go to state 49
    MULT   shift, and go to state 50
    DIVD   shift, and go to state 51
    MOD    shift, and go to state 52
    AND    shift, and go to state 53

    $default  reduce using rule 22 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 69

   22 exp: exp . relop exp
   23    | exp . sumop exp
   23    | exp sumop exp .
   24    | exp . proop exp

    MULT  shift, and go to state 50
    DIVD  shift, and go to state 51
    MOD   shift, and go to state 52
    AND   shift, and go to state 53

    $default  reduce using rule 23 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 70

   22 exp: exp . relop exp
   23    | exp . sumop exp
   24    | exp . proop exp
   24    | exp proop exp .

    $default  reduce using rule 24 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 71

   17 exp: name LPAREN error .

    $default  reduce using rule 17 (exp)


State 72

   16 exp: name LPAREN RPAREN .

    $default  reduce using rule 16 (exp)


State 73

   29 newexp: NEW simpleType LPAREN error .

    $default  reduce using rule 29 (newexp)


State 74

   28 newexp: NEW simpleType LPAREN RPAREN .

    $default  reduce using rule 28 (newexp)


State 75

   32 expstar: expstar LBRACK . exp RBRACK
   33        | expstar LBRACK . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 20
    NUM     shift, and go to state 21
    NLL     shift, and go to state 22
    READ    shift, and go to state 23
    NEW     shift, and go to state 24
    LPAREN  shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    BANG    shift, and go to state 28

    exp     go to state 77
    newexp  go to state 30
    name    go to state 31
    unyop   go to state 32


State 76

   30 newexp: NEW simpleType expstar brackstar .
   35 brackstar: brackstar . DOUBBRACK

    DOUBBRACK  shift, and go to state 78

    $default  reduce using rule 30 (newexp)


State 77

   22 exp: exp . relop exp
   23    | exp . sumop exp
   24    | exp . proop exp
   32 expstar: expstar LBRACK exp . RBRACK
   33        | expstar LBRACK exp . error

    error   shift, and go to state 79
    RBRACK  shift, and go to state 80
    DEQ     shift, and go to state 41
    NEQ     shift, and go to state 42
    LEQ     shift, and go to state 43
    GEQ     shift, and go to state 44
    GT      shift, and go to state 45
    LT      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    OR      shift, and go to state 49
    MULT    shift, and go to state 50
    DIVD    shift, and go to state 51
    MOD     shift, and go to state 52
    AND     shift, and go to state 53

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 78

   35 brackstar: brackstar DOUBBRACK .

    $default  reduce using rule 35 (brackstar)


State 79

   33 expstar: expstar LBRACK exp error .

    $default  reduce using rule 33 (expstar)


State 80

   32 expstar: expstar LBRACK exp RBRACK .

    $default  reduce using rule 32 (expstar)
