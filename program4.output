Grammar

    0 $accept: start $end

    1 start: %empty
    2      | start elem

    3 elem: statement
    4     | varDec

    5 statement: name EQ exp SEMI
    6          | name EQ exp error

    7 exp: name
    8    | NUM
    9    | NLL
   10    | name LPAREN RPAREN
   11    | name LPAREN error
   12    | READ LPAREN RPAREN
   13    | READ LPAREN error
   14    | READ error RPAREN
   15    | newexp
   16    | exp relop exp
   17    | exp sumop exp
   18    | exp proop exp
   19    | unyop exp
   20    | LPAREN exp RPAREN
   21    | LPAREN exp error

   22 newexp: NEW IDEN LPAREN arglist RPAREN
   23       | NEW IDEN LPAREN arglist error
   24       | NEW simpleType expstar brackstar

   25 brackstar: %empty
   26          | brackstar DOUBBRACK

   27 expstar: %empty
   28        | expstar LBRACK exp RBRACK
   29        | expstar LBRACK exp error

   30 arglist: %empty
   31        | explist

   32 explist: exp
   33        | explist COMMA exp

   34 name: THIS
   35     | IDEN
   36     | name DOT IDEN
   37     | name LBRACK exp RBRACK
   38     | name LBRACK exp error

   39 varDec: type IDEN SEMI
   40       | type IDEN error

   41 type: simpleType
   42     | type DOUBBRACK

   43 simpleType: INT
   44           | IDEN

   45 relop: DEQ
   46      | NEQ
   47      | LEQ
   48      | GEQ
   49      | GT
   50      | LT

   51 sumop: PLUS
   52      | MINUS
   53      | OR

   54 proop: MULT
   55      | DIVD
   56      | MOD
   57      | AND

   58 unyop: PLUS
   59      | MINUS
   60      | BANG


Terminals, with rules where they appear

$end (0) 0
error (256) 6 11 13 14 21 23 29 38 40
DOT (258) 36
THIS (259) 34
LBRACK (260) 28 29 37 38
RBRACK (261) 28 37
DOUBBRACK (262) 26 42
INT (263) 43
IDEN (264) 22 23 35 36 39 40 44
NUM (265) 8
NLL (266) 9
READ (267) 12 13 14
NEW (268) 22 23 24
LPAREN (269) 10 11 12 13 20 21 22 23
RPAREN (270) 10 12 14 20 22
DEQ (271) 45
NEQ (272) 46
LEQ (273) 47
GEQ (274) 48
GT (275) 49
LT (276) 50
PLUS (277) 51 58
MINUS (278) 52 59
OR (279) 53
MULT (280) 54
DIVD (281) 55
MOD (282) 56
AND (283) 57
BANG (284) 60
SEMI (285) 5 39
EQ (286) 5 6
COMMA (287) 33
RO (288)
SO (289)
PO (290)
UO (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
start (38)
    on left: 1 2, on right: 0 2
elem (39)
    on left: 3 4, on right: 2
statement (40)
    on left: 5 6, on right: 3
exp (41)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 5
    6 16 17 18 19 20 21 28 29 32 33 37 38
newexp (42)
    on left: 22 23 24, on right: 15
brackstar (43)
    on left: 25 26, on right: 24 26
expstar (44)
    on left: 27 28 29, on right: 24 28 29
arglist (45)
    on left: 30 31, on right: 22 23
explist (46)
    on left: 32 33, on right: 31 33
name (47)
    on left: 34 35 36 37 38, on right: 5 6 7 10 11 36 37 38
varDec (48)
    on left: 39 40, on right: 4
type (49)
    on left: 41 42, on right: 39 40 42
simpleType (50)
    on left: 43 44, on right: 24 41
relop (51)
    on left: 45 46 47 48 49 50, on right: 16
sumop (52)
    on left: 51 52 53, on right: 17
proop (53)
    on left: 54 55 56 57, on right: 18
unyop (54)
    on left: 58 59 60, on right: 19


State 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


State 1

    0 $accept: start . $end
    2 start: start . elem

    $end  shift, and go to state 2
    THIS  shift, and go to state 3
    INT   shift, and go to state 4
    IDEN  shift, and go to state 5

    elem        go to state 6
    statement   go to state 7
    name        go to state 8
    varDec      go to state 9
    type        go to state 10
    simpleType  go to state 11


State 2

    0 $accept: start $end .

    $default  accept


State 3

   34 name: THIS .

    $default  reduce using rule 34 (name)


State 4

   43 simpleType: INT .

    $default  reduce using rule 43 (simpleType)


State 5

   35 name: IDEN .
   44 simpleType: IDEN .

    DOUBBRACK  reduce using rule 44 (simpleType)
    IDEN       reduce using rule 44 (simpleType)
    $default   reduce using rule 35 (name)


State 6

    2 start: start elem .

    $default  reduce using rule 2 (start)


State 7

    3 elem: statement .

    $default  reduce using rule 3 (elem)


State 8

    5 statement: name . EQ exp SEMI
    6          | name . EQ exp error
   36 name: name . DOT IDEN
   37     | name . LBRACK exp RBRACK
   38     | name . LBRACK exp error

    DOT     shift, and go to state 12
    LBRACK  shift, and go to state 13
    EQ      shift, and go to state 14


State 9

    4 elem: varDec .

    $default  reduce using rule 4 (elem)


State 10

   39 varDec: type . IDEN SEMI
   40       | type . IDEN error
   42 type: type . DOUBBRACK

    DOUBBRACK  shift, and go to state 15
    IDEN       shift, and go to state 16


State 11

   41 type: simpleType .

    $default  reduce using rule 41 (type)


State 12

   36 name: name DOT . IDEN

    IDEN  shift, and go to state 17


State 13

   37 name: name LBRACK . exp RBRACK
   38     | name LBRACK . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 27
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 14

    5 statement: name EQ . exp SEMI
    6          | name EQ . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 31
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 15

   42 type: type DOUBBRACK .

    $default  reduce using rule 42 (type)


State 16

   39 varDec: type IDEN . SEMI
   40       | type IDEN . error

    error  shift, and go to state 32
    SEMI   shift, and go to state 33


State 17

   36 name: name DOT IDEN .

    $default  reduce using rule 36 (name)


State 18

   35 name: IDEN .

    $default  reduce using rule 35 (name)


State 19

    8 exp: NUM .

    $default  reduce using rule 8 (exp)


State 20

    9 exp: NLL .

    $default  reduce using rule 9 (exp)


State 21

   12 exp: READ . LPAREN RPAREN
   13    | READ . LPAREN error
   14    | READ . error RPAREN

    error   shift, and go to state 34
    LPAREN  shift, and go to state 35


State 22

   22 newexp: NEW . IDEN LPAREN arglist RPAREN
   23       | NEW . IDEN LPAREN arglist error
   24       | NEW . simpleType expstar brackstar

    INT   shift, and go to state 4
    IDEN  shift, and go to state 36

    simpleType  go to state 37


State 23

   20 exp: LPAREN . exp RPAREN
   21    | LPAREN . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 38
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 24

   58 unyop: PLUS .

    $default  reduce using rule 58 (unyop)


State 25

   59 unyop: MINUS .

    $default  reduce using rule 59 (unyop)


State 26

   60 unyop: BANG .

    $default  reduce using rule 60 (unyop)


State 27

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   37 name: name LBRACK exp . RBRACK
   38     | name LBRACK exp . error

    error   shift, and go to state 39
    RBRACK  shift, and go to state 40
    DEQ     shift, and go to state 41
    NEQ     shift, and go to state 42
    LEQ     shift, and go to state 43
    GEQ     shift, and go to state 44
    GT      shift, and go to state 45
    LT      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    OR      shift, and go to state 49
    MULT    shift, and go to state 50
    DIVD    shift, and go to state 51
    MOD     shift, and go to state 52
    AND     shift, and go to state 53

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 28

   15 exp: newexp .

    $default  reduce using rule 15 (exp)


State 29

    7 exp: name .
   10    | name . LPAREN RPAREN
   11    | name . LPAREN error
   36 name: name . DOT IDEN
   37     | name . LBRACK exp RBRACK
   38     | name . LBRACK exp error

    DOT     shift, and go to state 12
    LBRACK  shift, and go to state 13
    LPAREN  shift, and go to state 57

    $default  reduce using rule 7 (exp)


State 30

   19 exp: unyop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 58
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 31

    5 statement: name EQ exp . SEMI
    6          | name EQ exp . error
   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp

    error  shift, and go to state 59
    DEQ    shift, and go to state 41
    NEQ    shift, and go to state 42
    LEQ    shift, and go to state 43
    GEQ    shift, and go to state 44
    GT     shift, and go to state 45
    LT     shift, and go to state 46
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    OR     shift, and go to state 49
    MULT   shift, and go to state 50
    DIVD   shift, and go to state 51
    MOD    shift, and go to state 52
    AND    shift, and go to state 53
    SEMI   shift, and go to state 60

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 32

   40 varDec: type IDEN error .

    $default  reduce using rule 40 (varDec)


State 33

   39 varDec: type IDEN SEMI .

    $default  reduce using rule 39 (varDec)


State 34

   14 exp: READ error . RPAREN

    RPAREN  shift, and go to state 61


State 35

   12 exp: READ LPAREN . RPAREN
   13    | READ LPAREN . error

    error   shift, and go to state 62
    RPAREN  shift, and go to state 63


State 36

   22 newexp: NEW IDEN . LPAREN arglist RPAREN
   23       | NEW IDEN . LPAREN arglist error
   44 simpleType: IDEN .

    LPAREN  shift, and go to state 64

    $default  reduce using rule 44 (simpleType)


State 37

   24 newexp: NEW simpleType . expstar brackstar

    $default  reduce using rule 27 (expstar)

    expstar  go to state 65


State 38

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   20    | LPAREN exp . RPAREN
   21    | LPAREN exp . error

    error   shift, and go to state 66
    RPAREN  shift, and go to state 67
    DEQ     shift, and go to state 41
    NEQ     shift, and go to state 42
    LEQ     shift, and go to state 43
    GEQ     shift, and go to state 44
    GT      shift, and go to state 45
    LT      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    OR      shift, and go to state 49
    MULT    shift, and go to state 50
    DIVD    shift, and go to state 51
    MOD     shift, and go to state 52
    AND     shift, and go to state 53

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 39

   38 name: name LBRACK exp error .

    $default  reduce using rule 38 (name)


State 40

   37 name: name LBRACK exp RBRACK .

    $default  reduce using rule 37 (name)


State 41

   45 relop: DEQ .

    $default  reduce using rule 45 (relop)


State 42

   46 relop: NEQ .

    $default  reduce using rule 46 (relop)


State 43

   47 relop: LEQ .

    $default  reduce using rule 47 (relop)


State 44

   48 relop: GEQ .

    $default  reduce using rule 48 (relop)


State 45

   49 relop: GT .

    $default  reduce using rule 49 (relop)


State 46

   50 relop: LT .

    $default  reduce using rule 50 (relop)


State 47

   51 sumop: PLUS .

    $default  reduce using rule 51 (sumop)


State 48

   52 sumop: MINUS .

    $default  reduce using rule 52 (sumop)


State 49

   53 sumop: OR .

    $default  reduce using rule 53 (sumop)


State 50

   54 proop: MULT .

    $default  reduce using rule 54 (proop)


State 51

   55 proop: DIVD .

    $default  reduce using rule 55 (proop)


State 52

   56 proop: MOD .

    $default  reduce using rule 56 (proop)


State 53

   57 proop: AND .

    $default  reduce using rule 57 (proop)


State 54

   16 exp: exp relop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 68
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 55

   17 exp: exp sumop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 69
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 56

   18 exp: exp proop . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 70
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 57

   10 exp: name LPAREN . RPAREN
   11    | name LPAREN . error

    error   shift, and go to state 71
    RPAREN  shift, and go to state 72


State 58

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   19    | unyop exp .

    $default  reduce using rule 19 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 59

    6 statement: name EQ exp error .

    $default  reduce using rule 6 (statement)


State 60

    5 statement: name EQ exp SEMI .

    $default  reduce using rule 5 (statement)


State 61

   14 exp: READ error RPAREN .

    $default  reduce using rule 14 (exp)


State 62

   13 exp: READ LPAREN error .

    $default  reduce using rule 13 (exp)


State 63

   12 exp: READ LPAREN RPAREN .

    $default  reduce using rule 12 (exp)


State 64

   22 newexp: NEW IDEN LPAREN . arglist RPAREN
   23       | NEW IDEN LPAREN . arglist error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    $default  reduce using rule 30 (arglist)

    exp      go to state 73
    newexp   go to state 28
    arglist  go to state 74
    explist  go to state 75
    name     go to state 29
    unyop    go to state 30


State 65

   24 newexp: NEW simpleType expstar . brackstar
   28 expstar: expstar . LBRACK exp RBRACK
   29        | expstar . LBRACK exp error

    LBRACK  shift, and go to state 76

    $default  reduce using rule 25 (brackstar)

    brackstar  go to state 77


State 66

   21 exp: LPAREN exp error .

    $default  reduce using rule 21 (exp)


State 67

   20 exp: LPAREN exp RPAREN .

    $default  reduce using rule 20 (exp)


State 68

   16 exp: exp . relop exp
   16    | exp relop exp .
   17    | exp . sumop exp
   18    | exp . proop exp

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    OR     shift, and go to state 49
    MULT   shift, and go to state 50
    DIVD   shift, and go to state 51
    MOD    shift, and go to state 52
    AND    shift, and go to state 53

    $default  reduce using rule 16 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 69

   16 exp: exp . relop exp
   17    | exp . sumop exp
   17    | exp sumop exp .
   18    | exp . proop exp

    MULT  shift, and go to state 50
    DIVD  shift, and go to state 51
    MOD   shift, and go to state 52
    AND   shift, and go to state 53

    $default  reduce using rule 17 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 70

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   18    | exp proop exp .

    $default  reduce using rule 18 (exp)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 71

   11 exp: name LPAREN error .

    $default  reduce using rule 11 (exp)


State 72

   10 exp: name LPAREN RPAREN .

    $default  reduce using rule 10 (exp)


State 73

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   32 explist: exp .

    DEQ    shift, and go to state 41
    NEQ    shift, and go to state 42
    LEQ    shift, and go to state 43
    GEQ    shift, and go to state 44
    GT     shift, and go to state 45
    LT     shift, and go to state 46
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    OR     shift, and go to state 49
    MULT   shift, and go to state 50
    DIVD   shift, and go to state 51
    MOD    shift, and go to state 52
    AND    shift, and go to state 53

    $default  reduce using rule 32 (explist)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 74

   22 newexp: NEW IDEN LPAREN arglist . RPAREN
   23       | NEW IDEN LPAREN arglist . error

    error   shift, and go to state 78
    RPAREN  shift, and go to state 79


State 75

   31 arglist: explist .
   33 explist: explist . COMMA exp

    COMMA  shift, and go to state 80

    $default  reduce using rule 31 (arglist)


State 76

   28 expstar: expstar LBRACK . exp RBRACK
   29        | expstar LBRACK . exp error

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 81
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 77

   24 newexp: NEW simpleType expstar brackstar .
   26 brackstar: brackstar . DOUBBRACK

    DOUBBRACK  shift, and go to state 82

    $default  reduce using rule 24 (newexp)


State 78

   23 newexp: NEW IDEN LPAREN arglist error .

    $default  reduce using rule 23 (newexp)


State 79

   22 newexp: NEW IDEN LPAREN arglist RPAREN .

    $default  reduce using rule 22 (newexp)


State 80

   33 explist: explist COMMA . exp

    THIS    shift, and go to state 3
    IDEN    shift, and go to state 18
    NUM     shift, and go to state 19
    NLL     shift, and go to state 20
    READ    shift, and go to state 21
    NEW     shift, and go to state 22
    LPAREN  shift, and go to state 23
    PLUS    shift, and go to state 24
    MINUS   shift, and go to state 25
    BANG    shift, and go to state 26

    exp     go to state 83
    newexp  go to state 28
    name    go to state 29
    unyop   go to state 30


State 81

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   28 expstar: expstar LBRACK exp . RBRACK
   29        | expstar LBRACK exp . error

    error   shift, and go to state 84
    RBRACK  shift, and go to state 85
    DEQ     shift, and go to state 41
    NEQ     shift, and go to state 42
    LEQ     shift, and go to state 43
    GEQ     shift, and go to state 44
    GT      shift, and go to state 45
    LT      shift, and go to state 46
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    OR      shift, and go to state 49
    MULT    shift, and go to state 50
    DIVD    shift, and go to state 51
    MOD     shift, and go to state 52
    AND     shift, and go to state 53

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 82

   26 brackstar: brackstar DOUBBRACK .

    $default  reduce using rule 26 (brackstar)


State 83

   16 exp: exp . relop exp
   17    | exp . sumop exp
   18    | exp . proop exp
   33 explist: explist COMMA exp .

    DEQ    shift, and go to state 41
    NEQ    shift, and go to state 42
    LEQ    shift, and go to state 43
    GEQ    shift, and go to state 44
    GT     shift, and go to state 45
    LT     shift, and go to state 46
    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    OR     shift, and go to state 49
    MULT   shift, and go to state 50
    DIVD   shift, and go to state 51
    MOD    shift, and go to state 52
    AND    shift, and go to state 53

    $default  reduce using rule 33 (explist)

    relop  go to state 54
    sumop  go to state 55
    proop  go to state 56


State 84

   29 expstar: expstar LBRACK exp error .

    $default  reduce using rule 29 (expstar)


State 85

   28 expstar: expstar LBRACK exp RBRACK .

    $default  reduce using rule 28 (expstar)
